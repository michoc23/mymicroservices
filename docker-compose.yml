version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: user-service-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - user-service-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin - PostgreSQL Web Interface
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: user-service-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - user-service-network
    depends_on:
      - postgres

  # User Service Application (Optional - uncomment to run the app)
  # user-service:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: user-service-app
  #   restart: unless-stopped
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user_db
  #     SPRING_DATASOURCE_USERNAME: postgres
  #     SPRING_DATASOURCE_PASSWORD: postgres
  #     JWT_SECRET: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - user-service-network
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

networks:
  user-service-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local